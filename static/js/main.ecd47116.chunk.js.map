{"version":3,"sources":["logo.svg","data.js","PageHeader.js","PageFooter.js","Project.js","PageContent.js","SelectedProject.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","data","title","image","desc","url","PageHeader","className","year","Date","getFullYear","PageFooter","id","Project","link","index","alt","src","width","height","to","PageContent","map","place","i","key","SelectedProject","props","useParams","console","log","href","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ecd47116.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const data = [\n    {\n      title: 'A Colorful Breakout Game',\n      image: '/images/Breakout.png',\n      desc: 'A breakout game in JavaScript; with complimentary colors aquired from random colors',\n      url:'https://gscrawley.github.io/breakout/dist'\n    },\n    {\n      title: 'ViDate',\n      image: '/images/datingapp.png',\n      desc: 'Demo for a dating app with video chat capability, built using Python, Flask, MongoDB, HTML, CSS',\n      url:'https://winterintensivedatingapp.herokuapp.com/'\n    },\n    {\n      title: 'Leah & the Infinite Loop',\n      image: '/images/Leah.png',\n      desc: 'Personal Website I designed for a friend, using HTML, CSS, and Bootstrap',\n      url: 'https://gscrawley.github.io/Leah/'\n    },\n    {\n      title: '343 sansome roof garden',\n      image: '/images/343-sansome-roof-garden.jpg',\n      desc: 'unique roof garden',\n    },\n    {\n      title: '525 market street plaza',\n      image: '/images/525-market-street-plaza.jpg',\n      desc: 'large indoor plaza with a fountain',\n    },\n    {\n      title: 'citigroup center',\n      image: '/images/citigroup-center.jpg',\n      desc: 'neat sitting area with a fountain',\n    },\n    {\n      title: 'empire park',\n      image: '/images/empire-park.jpg',\n      desc: 'a green shady sitting area',\n    },\n    {\n      title: '150 california garden terrace',\n      image: 'images/garden-terrace-at-150-california.jpg',\n      desc: 'garden terrace with a sitting area',\n    },\n    {\n      title: 'transamerica redwood park',\n      image: '/images/transamerica-redwood-park.jpg',\n      desc: 'massive redwood park, with a fountain',\n    }\n  ]\n  export default data","import React from 'react'\nimport './PageHeader.css'\n\n\nfunction PageHeader() {\n    return (\n    <div className=\"PageHeader\">\n        <header>\n            <h1>Gideon S. Crawley - Portfolio</h1>\n            <h2>github.com/GSCrawley</h2>\n            <h3>linkedIn.com/GSCrawley</h3>\n            <h3>gscrawley@gmail.com</h3>\n        </header>\n    </div>\n    )\n   }\n \nexport default PageHeader","import React from 'react'\nimport './PageFooter.css'\n\nvar currentTime = new Date()\nvar year = currentTime.getFullYear()\n\nfunction PageFooter() {\n    return (\n    <div className=\"PageFooter\">\n    <header>\n    <h3>Gideon Crawley &copy; <span id= {year}></span> 2020</h3>\n    </header>\n    </div>\n    )\n   }\n\nexport default PageFooter","import { Link } from 'react-router-dom'\nimport React from 'react'\nimport './Project.css'\n\nfunction Project({ image, title, link, index}) {\n    return (\n        <div className='projects'>\n            <div className=\"ProjectImage\">\n                <div className=\"ProjectTitle\">\n                    <div className=\"ProjectLink\">\n                        <img alt=\"\" src={image} width=\"300\" height=\"auto\" />\n                        <h3>{title}</h3>\n                        <Link to={link}>Project Details</Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n        )\n   }\n\nexport default Project","import data from './data'\nimport React from 'react'\nimport Project from './Project'\nimport './PageContent.css'\n\n\nfunction PageContent() {\n    return (\n    <div className=\"projects\">\n    {\n      // place is the element in the array\n      // i is the index of the element\n      data.map((place, i) => { // data takes a function as a parameter\n        return ( // Return a component\n        <Project \n          key={`${i}-${place.image}`} \n          title={place.title} \n          image={place.image} \n          link={`${i}`} \n        />\n      )\n    })\n   }\n   </div>\n)\n}\n\nexport default PageContent\n","import React from 'react'\nimport data from './data'\nimport { Link, useParams } from 'react-router-dom'\nimport  './SelectedProject.css'\n\n// {/* <SelectedProject url=\"\" title=\"\"/> */}\n\nfunction SelectedProject(props) {\n    const { index } = useParams()\n    const place = data[index]\n\n    console.log(\"props.url\", props.url)\n    \n    return (\n    <div className='project'>\n      <img alt=\"\" src={place.image} width=\"450\" height=\"auto\" />\n      <h3>{place.title}</h3>\n      <p>{place.desc}</p>\n      <Link to='/'>Back to Home</Link>\n      <a href={place.url}> Link to Project</a>\n    </div>\n  )\n}\n\nexport default SelectedProject","import data from './data';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport PageHeader from './PageHeader';\nimport PageFooter from './PageFooter';\nimport PageContent from './PageContent';\nimport Project from './Project';\nimport SelectedProject from './SelectedProject.js';\n\n\nfunction App() {\n \n  return (\n    <Router>\n      <div className=\"App\">\n        <PageHeader />\n        <PageFooter />\n        <Route exact path='/' component={PageContent} />\n        <Route path='/:index' component={SelectedProject} />\n        </div>\n    </Router>\n  );\n    }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}